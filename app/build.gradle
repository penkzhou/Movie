


plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.cacheFixPlugin)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.parcelize)
    alias(libs.plugins.gms.googleServices)
    alias(libs.plugins.firebase.crashlytics)
    alias(libs.plugins.firebase.perf)
    alias(libs.plugins.hilt.plugin)
    alias(libs.plugins.ksp)
    alias(libs.plugins.spotless)
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.oldautumn.movie"
        minSdk 23
        targetSdk 34
        versionCode 2
        versionName "0.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }


    kotlin {
        jvmToolchain(17)
    }    
    
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    namespace 'com.oldautumn.movie'

    testOptions {
        unitTests.returnDefaultValues = true
    }

}

dependencies {


    // ViewModel
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.lifecycle.livedata.ktx
    implementation libs.lifecycle.runtime.ktx
    implementation libs.lifecycle.viewmodel.savedstate

    implementation libs.constraintlayout
    implementation libs.datastore
    implementation libs.navigation.fragment.ktx
    implementation libs.navigation.ui.ktx
    implementation libs.androidx.core

    implementation libs.appCompat
    implementation libs.fragment
    implementation libs.preference
    implementation libs.paging
    implementation libs.palette
    implementation libs.material

    implementation libs.hiltdagger
    ksp libs.hiltdagger.compiler

    implementation libs.dotsindicator
    implementation libs.retrofit2.converter.moshi
    implementation libs.okhttp.logging.interceptor

    implementation platform(libs.deps.firebase.bom)
    implementation libs.deps.firebase.crashlytics
    implementation libs.deps.firebase.analytics
    implementation libs.deps.firebase.perf

    implementation libs.coil



    debugImplementation libs.leakcanary.android

    testImplementation libs.junit
    androidTestImplementation libs.androidxTest
    androidTestImplementation libs.androidxEspresso
}

spotless {
    kotlin {

        target("src/**/*.kt")
        ktlint(libs.ktlint.get().version)   // has its own section below
        licenseHeaderFile(rootProject.file("spotless/Copyright.kt"))
    }
    kotlinGradle {
        target("*.kts")
        ktlint(libs.ktlint.get().version)
        licenseHeaderFile(rootProject.file("spotless/Copyright.kts"), "(^(?![\\/ ]\\**).*\$)")
    }
}

